# SMS API - Simplified Endpoints

## üåê API Base URL: `http://localhost/sms/api/`

## Authentication & Profile Management (FOR EVERY USER SELF DETAILS)

### POST /auth/login

**Description:** User login  
**Request:**

```json
{
  "email": "admin@gmail.com",
  "password": "adminpass"
}
```

**Response:**

```json
{
  "token": "jwt_token_here"
}
```

### GET /auth/me

**Headers:** `Authorization: Bearer {token}` (any authenticated user)  
**Description:** Get your own user details  
**Response:**

```json
{
  "user_type": "ADMIN",
  "department_id": null,
  "full_name": "System Admin",
  "email": "admin@gmail.com"
}
```

### PUT /auth/me

**Headers:** `Authorization: Bearer {token}` (any authenticated user)  
**Description:** Update your own profile  
**Request (all fields optional):**

```json
{
  "full_name": "Updated Name",
  "email": "newemail@gmail.com",
  "current_password": "oldpassword",
  "new_password": "newpassword123"
}
```

**Response:**

```json
{
  "message": "Profile updated successfully"
}
```

---

## Department Management (ADMIN ONLY for CUD, ANY authenticated for READ)

### GET /departments

**Headers:** `Authorization: Bearer {token}` (any authenticated user)  
**Description:** Get all departments  
**Response:**

```json
[
  {
    "department_id": 1,
    "department_code": "CSE",
    "department_name": "Computer Science and Engineering",
    "hod_name": "CSE HOD",
    "hod_email": "hod.cse@gmail.com"
  }
]
```

### GET /departments/{id}

**Headers:** `Authorization: Bearer {token}` (any authenticated user)  
**Description:** Get specific department details  
**Response:**

```json
{
  "department_id": 1,
  "department_code": "CSE",
  "department_name": "Computer Science and Engineering",
  "hod_name": "CSE HOD",
  "hod_email": "hod.cse@gmail.com"
}
```

### POST /departments

**Headers:** `Authorization: Bearer {token}` (ADMIN only)  
**Description:** Create new department  
**Request:**

```json
{
  "department_code": "EEE",
  "department_name": "Electrical and Electronic Engineering",
  "hod_email": "hod.eee@gmail.com"
}
```

**Response:**

```json
{
  "message": "Department created successfully",
  "department_id": 2,
  "department_code": "EEE",
  "department_name": "Electrical and Electronic Engineering",
  "hod_email": "hod.eee@gmail.com"
}
```

### PUT /departments/{id}

**Headers:** `Authorization: Bearer {token}` (ADMIN only)  
**Description:** Update department  
**Request (all fields optional):**

```json
{
  "department_code": "CS",
  "department_name": "Computer Science",
  "hod_email": "newhod.cs@gmail.com"
}
```

**Response:**

```json
{
  "message": "Department updated successfully"
}
```

### DELETE /departments/{id}

**Headers:** `Authorization: Bearer {token}` (ADMIN only)  
**Description:** Delete department  
**Response:**

```json
{
  "message": "Department deleted successfully"
}
```

---

## Degree Management (ADMIN ONLY for CUD, ANY authenticated for READ)

### GET /degrees

**Headers:** `Authorization: Bearer {token}` (any authenticated user)  
**Description:** Get all degree levels  
**Response:**

```json
[
  {
    "degree_level_id": 1,
    "level_name": "Undergraduate"
  },
  {
    "degree_level_id": 2,
    "level_name": "Postgraduate"
  }
]
```

### GET /degrees/{id}

**Headers:** `Authorization: Bearer {token}` (any authenticated user)  
**Description:** Get specific degree level  
**Response:**

```json
{
  "degree_level_id": 1,
  "level_name": "Undergraduate"
}
```

### POST /degrees

**Headers:** `Authorization: Bearer {token}` (ADMIN only)  
**Description:** Create new degree level  
**Request:**

```json
{
  "level_name": "Doctorate"
}
```

**Response:**

```json
{
  "message": "Degree level created successfully",
  "degree_level_id": 4,
  "level_name": "Doctorate"
}
```

### PUT /degrees/{id}

**Headers:** `Authorization: Bearer {token}` (ADMIN only)  
**Description:** Update degree level  
**Request:**

```json
{
  "level_name": "Updated Degree Name"
}
```

**Response:**

```json
{
  "message": "Degree level updated successfully"
}
```

### DELETE /degrees/{id}

**Headers:** `Authorization: Bearer {token}` (ADMIN only)  
**Description:** Delete degree level  
**Response:**

```json
{
  "message": "Degree level deleted successfully"
}
```

---

## User Management (ADMIN for HOD management)

### GET /users?type=HOD

**Headers:** `Authorization: Bearer {token}` (ADMIN to view all, others for their department)  
**Description:** Get HOD users (Admin requirement)  
**Response:**

```json
[
  {
    "user_id": 2,
    "user_type": "HOD",
    "full_name": "CSE HOD",
    "email": "hod.cse@gmail.com",
    "is_active": true,
    "department_name": "Computer Science and Engineering",
    "department_code": "CSE"
  }
]
```

**Query Parameters:**

- `?type=HOD` - Filter by user type (STUDENT, FACULTY, STAFF, HOD, ADMIN)

### GET /users/{id}

**Headers:** `Authorization: Bearer {token}` (ADMIN to view any user, others for their department)  
**Description:** Get specific user details  
**Response:**

```json
{
  "user_id": 2,
  "user_type": "HOD",
  "full_name": "CSE HOD",
  "email": "hod.cse@gmail.com",
  "is_active": true,
  "department_id": 1,
  "department_name": "Computer Science and Engineering",
  "department_code": "CSE"
}
```

### DELETE /users/{id}

**Headers:** `Authorization: Bearer {token}` (ADMIN to delete any user especially HOD, HOD to delete department users)  
**Description:** Delete user  
**Response:**

```json
{
  "message": "User deleted successfully",
  "deleted_user": {
    "user_type": "HOD",
    "full_name": "CSE HOD",
    "email": "hod.cse@gmail.com"
  }
}
```

---

## Programme Management (Department-Specific)

### GET /programmes

**Headers:** `Authorization: Bearer {token}` (any authenticated user from department)  
**Description:** Get all programmes in your department  
**Response:**

```json
[
  {
    "programme_id": 1,
    "programme_name": "BSc Computer Science",
    "minimum_duration_years": 4,
    "maximum_duration_years": 6,
    "is_active": true,
    "degree_level": "Undergraduate",
    "department_code": "CSE",
    "department_name": "Computer Science and Engineering"
  }
]
```

### GET /programmes/{id}

**Headers:** `Authorization: Bearer {token}` (any authenticated user from department)  
**Description:** Get specific programme details from your department  
**Response:**

```json
{
  "programme_id": 1,
  "programme_name": "BSc Computer Science",
  "minimum_duration_years": 4,
  "maximum_duration_years": 6,
  "is_active": true,
  "degree_level": "Undergraduate",
  "department_code": "CSE",
  "department_name": "Computer Science and Engineering"
}
```

### POST /programmes

**Headers:** `Authorization: Bearer {token}` (HOD only)  
**Description:** Create a new programme in your department  
**Request:**

```json
{
  "programme_name": "PhD Computer Science",
  "degree_level_id": 3,
  "minimum_duration_years": 3,
  "maximum_duration_years": 6
}
```

**Response:**

```json
{
  "message": "Programme created successfully",
  "programme_id": 4,
  "programme_name": "PhD Computer Science",
  "degree_level": "Doctorate"
}
```

### PUT /programmes/{id}

**Headers:** `Authorization: Bearer {token}` (HOD only)  
**Description:** Update programme in your department  
**Request (all fields optional):**

```json
{
  "programme_name": "Updated Programme Name",
  "minimum_duration_years": 3,
  "maximum_duration_years": 5,
  "is_active": false
}
```

**Response:**

```json
{
  "message": "Programme updated successfully"
}
```

### DELETE /programmes/{id}

**Headers:** `Authorization: Bearer {token}` (HOD only)  
**Description:** Delete programme from your department  
**Response:**

```json
{
  "message": "Programme deleted successfully"
}
```

---

## Batch Management (Department-Specific)

### GET /batches

**Headers:** `Authorization: Bearer {token}` (any authenticated user from department)  
**Description:** Get all batches in your department  
**Response:**

```json
[
  {
    "batch_id": 1,
    "batch_name": "2024 Autumn Batch",
    "start_year": 2024,
    "start_semester": "AUTUMN",
    "is_active": true,
    "programme_name": "BSc Computer Science",
    "programme_id": 1,
    "department_code": "CSE",
    "department_name": "Computer Science and Engineering"
  }
]
```

### GET /batches/{id}

**Headers:** `Authorization: Bearer {token}` (any authenticated user from department)  
**Description:** Get specific batch details from your department  
**Response:**

```json
{
  "batch_id": 1,
  "batch_name": "2024 Autumn Batch",
  "start_year": 2024,
  "start_semester": "AUTUMN",
  "is_active": true,
  "programme_name": "BSc Computer Science",
  "programme_id": 1,
  "department_code": "CSE",
  "department_name": "Computer Science and Engineering"
}
```

### POST /batches

**Headers:** `Authorization: Bearer {token}` (HOD or STAFF only)  
**Description:** Create a new batch in your department  
**Request:**

```json
{
  "programme_id": 1,
  "batch_name": "2025 Spring Batch",
  "start_year": 2025,
  "start_semester": "SPRING"
}
```

**Response:**

```json
{
  "message": "Batch created successfully",
  "batch_id": 3,
  "batch_name": "2025 Spring Batch",
  "programme_name": "BSc Computer Science"
}
```

### PUT /batches/{id}

**Headers:** `Authorization: Bearer {token}` (HOD or STAFF only)  
**Description:** Update batch in your department  
**Request (all fields optional):**

```json
{
  "batch_name": "Updated Batch Name",
  "start_year": 2025,
  "start_semester": "SPRING",
  "is_active": false
}
```

**Response:**

```json
{
  "message": "Batch updated successfully"
}
```

### DELETE /batches/{id}

**Headers:** `Authorization: Bearer {token}` (HOD only)  
**Description:** Delete batch from your department  
**Response:**

```json
{
  "message": "Batch deleted successfully"
}
```

---

## Faculty Management (Department-Specific)

### GET /faculties

**Headers:** `Authorization: Bearer {token}` (any authenticated user from department)  
**Description:** Get all faculty members in your department  
**Response:**

```json
[
  {
    "user_id": 3,
    "full_name": "Dr. John Faculty",
    "email": "john.faculty@gmail.com",
    "is_active": true,
    "phone_number": "+1234567890",
    "specialization": "Machine Learning",
    "department_code": "CSE",
    "department_name": "Computer Science and Engineering"
  }
]
```

### GET /faculties/{id}

**Headers:** `Authorization: Bearer {token}` (any authenticated user from department)  
**Description:** Get specific faculty details from your department  
**Response:**

```json
{
  "user_id": 3,
  "user_type": "FACULTY",
  "full_name": "Dr. John Faculty",
  "email": "john.faculty@gmail.com",
  "is_active": true,
  "phone_number": "+1234567890",
  "specialization": "Machine Learning",
  "department_code": "CSE",
  "department_name": "Computer Science and Engineering"
}
```

### POST /faculties

**Headers:** `Authorization: Bearer {token}` (HOD only)  
**Description:** Create a new faculty member in your department  
**Request:**

```json
{
  "email": "new.faculty@gmail.com"
}
```

**Response:**

```json
{
  "message": "Faculty created successfully. Password set to email address.",
  "user_id": 8,
  "user_type": "FACULTY",
  "email": "new.faculty@gmail.com",
  "department_id": 1
}
```

### PUT /faculties/{id}

**Headers:** `Authorization: Bearer {token}` (HOD for all faculty, Faculty for own profile)  
**Description:** Update faculty information

**HOD Request (can update any faculty field):**

```json
{
  "full_name": "Dr. Updated Faculty Name",
  "email": "updated.faculty@gmail.com",
  "phone_number": "+9876543210",
  "specialization": "Artificial Intelligence",
  "is_active": true
}
```

**Faculty Self-Update Request (phone_number and specialization only):**

```json
{
  "phone_number": "+9876543210",
  "specialization": "Deep Learning"
}
```

**Response:**

```json
{
  "message": "Faculty updated successfully"
}
```

### DELETE /faculties/{id}

**Headers:** `Authorization: Bearer {token}` (HOD only)  
**Description:** Delete faculty from your department  
**Response:**

```json
{
  "message": "Faculty deleted successfully",
  "deleted_faculty": {
    "full_name": "Dr. John Faculty",
    "email": "john.faculty@gmail.com"
  }
}
```

---

## Test Users (from schema.sql)

- **Admin:** admin@gmail.com / adminpass (No department)
- **HOD:** hod.cse@gmail.com / adminpass (CSE Department)
- **Faculty:** faculty.cse@gmail.com / adminpass (CSE Department)
- **Staff:** staff.cse@gmail.com / adminpass (CSE Department)
- **Student:** student.cse@gmail.com / adminpass (CSE Department)

---

## Permission Matrix

| Endpoint                  | ADMIN  | HOD     | FACULTY | STAFF   | STUDENT |
| ------------------------- | ------ | ------- | ------- | ------- | ------- |
| **Auth Endpoints**        | ‚úÖ     | ‚úÖ      | ‚úÖ      | ‚úÖ      | ‚úÖ      |
| POST /auth/login          | ‚úÖ     | ‚úÖ      | ‚úÖ      | ‚úÖ      | ‚úÖ      |
| GET /auth/me              | ‚úÖ     | ‚úÖ      | ‚úÖ      | ‚úÖ      | ‚úÖ      |
| PUT /auth/me              | ‚úÖ     | ‚úÖ      | ‚úÖ      | ‚úÖ      | ‚úÖ      |
| **Department Management** |
| GET /departments          | ‚úÖ     | ‚úÖ      | ‚úÖ      | ‚úÖ      | ‚úÖ      |
| GET /departments/{id}     | ‚úÖ     | ‚úÖ      | ‚úÖ      | ‚úÖ      | ‚úÖ      |
| POST /departments         | ‚úÖ     | ‚ùå      | ‚ùå      | ‚ùå      | ‚ùå      |
| PUT /departments/{id}     | ‚úÖ     | ‚ùå      | ‚ùå      | ‚ùå      | ‚ùå      |
| DELETE /departments/{id}  | ‚úÖ     | ‚ùå      | ‚ùå      | ‚ùå      | ‚ùå      |
| **Degree Management**     |
| GET /degrees              | ‚úÖ     | ‚úÖ      | ‚úÖ      | ‚úÖ      | ‚úÖ      |
| GET /degrees/{id}         | ‚úÖ     | ‚úÖ      | ‚úÖ      | ‚úÖ      | ‚úÖ      |
| POST /degrees             | ‚úÖ     | ‚ùå      | ‚ùå      | ‚ùå      | ‚ùå      |
| PUT /degrees/{id}         | ‚úÖ     | ‚ùå      | ‚ùå      | ‚ùå      | ‚ùå      |
| DELETE /degrees/{id}      | ‚úÖ     | ‚ùå      | ‚ùå      | ‚ùå      | ‚ùå      |
| **User Management**       |
| GET /users?type=HOD       | ‚úÖ All | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept | ‚ùå      |
| GET /users/{id}           | ‚úÖ Any | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept | ‚ùå      |
| DELETE /users/{id}        | ‚úÖ Any | ‚úÖ Dept | ‚ùå      | ‚ùå      | ‚ùå      |
| **Programme Management**  |
| GET /programmes           | ‚ùå     | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept |
| GET /programmes/{id}      | ‚ùå     | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept |
| POST /programmes          | ‚ùå     | ‚úÖ Dept | ‚ùå      | ‚ùå      | ‚ùå      |
| PUT /programmes/{id}      | ‚ùå     | ‚úÖ Dept | ‚ùå      | ‚ùå      | ‚ùå      |
| DELETE /programmes/{id}   | ‚ùå     | ‚úÖ Dept | ‚ùå      | ‚ùå      | ‚ùå      |
| **Batch Management**      |
| GET /batches              | ‚ùå     | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept |
| GET /batches/{id}         | ‚ùå     | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept |
| POST /batches             | ‚ùå     | ‚úÖ Dept | ‚ùå      | ‚úÖ Dept | ‚ùå      |
| PUT /batches/{id}         | ‚ùå     | ‚úÖ Dept | ‚ùå      | ‚úÖ Dept | ‚ùå      |
| DELETE /batches/{id}      | ‚ùå     | ‚úÖ Dept | ‚ùå      | ‚ùå      | ‚ùå      |
| **Faculty Management**    |
| GET /faculties            | ‚ùå     | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept |
| GET /faculties/{id}       | ‚ùå     | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept | ‚úÖ Dept |
| POST /faculties           | ‚ùå     | ‚úÖ Dept | ‚ùå      | ‚ùå      | ‚ùå      |
| PUT /faculties/{id}       | ‚ùå     | ‚úÖ Dept | ‚úÖ Self | ‚ùå      | ‚ùå      |
| DELETE /faculties/{id}    | ‚ùå     | ‚úÖ Dept | ‚ùå      | ‚ùå      | ‚ùå      |

**Notes:**

- ‚úÖ All = Can access all records
- ‚úÖ Dept = Can access records from their department only
- ‚úÖ Any = Can access any single record
- ‚úÖ Self = Can only update their own profile (limited fields)
- ‚ùå = No access
